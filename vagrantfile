# Defines our Vagrant environment
#
# -*- mode: ruby -*-
# vi: set ft=ruby :

# This script to install Kubernetes will get executed after we have provisioned the box 

$ansiblesvr_script = <<-ANSIBLESVR_SCRIPT

sudo yum update -y

sudo yum install epel-release -y

sudo yum install ansible -y

sudo cp /tmp/hosts /etc/hosts

sudo ansible-playbook /vagrant/ansible/playbooks/dkr-install.yml --extra-vars hosts_var=localhost -c local -v

sudo ansible-playbook /vagrant/ansible/playbooks/kube-install.yml --extra-vars hosts_var=localhost -c local -v

sudo docker info
ANSIBLESVR_SCRIPT



$prxysvr_script = <<-PRXYSVR_SCRIPT

sudo mkdir /etc/haproxy
sudo mv /home/vagrant/haproxy.cfg /etc/haproxy

sudo yum install -y haproxy

sudo systemctl start haproxy
sudo chkconfig haproxy on

PRXYSVR_SCRIPT


Vagrant.configure("2") do |config|


  # create prxysvr node
        config.vm.define "prxysvr" do |prxysvr_config|
                prxysvr_config.vm.box = "bento/centos-7"
                prxysvr_config.vm.hostname = "prxysvr"
                prxysvr_config.vm.network "forwarded_port", guest: 80, host: 80
                prxysvr_config.vm.network "forwarded_port", guest: 443, host: 443
                prxysvr_config.vm.network "forwarded_port", guest: 6443, host: 6443
                prxysvr_config.vm.network "private_network", ip: "172.128.0.5"
                prxysvr_config.vm.provider "virtualbox" do |vb|
                        vb.memory = "256"
                        vb.cpus = "1"
                end
                prxysvr_config.vm.boot_timeout = 600
                prxysvr_config.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
                prxysvr_config.vm.provision "shell", inline:  "sudo cat /tmp/hosts >> /etc/hosts"
		prxysvr_config.vm.provision "file", source: "haproxy.cfg", destination: "~/haproxy.cfg"
		prxysvr_config.vm.provision "shell", inline: $prxysvr_script

        end


  # create k8ssvr node
	config.vm.define "k8ssvr" do |k8ssvr_config|
		k8ssvr_config.vm.box = "bento/centos-7"
		k8ssvr_config.vm.hostname = "k8ssvr"
		k8ssvr_config.vm.network "private_network", ip: "172.128.0.2"
		k8ssvr_config.vm.provider "virtualbox" do |vb|
			vb.memory = "1024"
			vb.cpus = "2"
		end
		k8ssvr_config.vm.boot_timeout = 600
		k8ssvr_config.vm.provision "shell", inline: $ansiblesvr_script
		k8ssvr_config.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
		k8ssvr_config.vm.provision "shell", inline:  "sudo cat /tmp/hosts >> /etc/hosts"
		k8ssvr_config.vm.synced_folder "ansible/", "/etc/ansible"
  	end

  # create k8swrkr1 node
	config.vm.define "k8swrkr1" do |k8swrkr1_config|
		k8swrkr1_config.vm.box = "bento/centos-7"
		k8swrkr1_config.vm.hostname = "k8swrkr1"
		k8swrkr1_config.vm.network "private_network", ip: "172.128.0.3"
		k8swrkr1_config.vm.provider "virtualbox" do |vb|
			vb.memory = "1024"
		end
		k8swrkr1_config.vm.boot_timeout = 600
		k8swrkr1_config.vm.provision "shell", inline: $ansiblesvr_script
		k8swrkr1_config.vm.synced_folder "ansible/", "/etc/ansible"
		k8swrkr1_config.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
		k8swrkr1_config.vm.provision "shell", inline: "sudo cat /tmp/hosts >> /etc/hosts"
 	 end

  # create k8swrkr2 node
	config.vm.define "k8swrkr2" do |k8swrkr2_config|
		k8swrkr2_config.vm.box = "bento/centos-7"
		k8swrkr2_config.vm.hostname = "k8swrkr2"
		k8swrkr2_config.vm.network "private_network", ip: "172.128.0.4"
		k8swrkr2_config.vm.provider "virtualbox" do |vb|
			vb.memory = "1024"
		end
		k8swrkr2_config.vm.boot_timeout = 600
		k8swrkr2_config.vm.provision "shell", inline: $ansiblesvr_script
		k8swrkr2_config.vm.synced_folder "ansible/", "/etc/ansible"
		k8swrkr2_config.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
		k8swrkr2_config.vm.provision "shell", inline: "sudo cat /tmp/hosts >> /etc/hosts"
	end

end
